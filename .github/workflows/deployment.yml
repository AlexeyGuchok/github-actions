name: Deploy React App
on:
  push:
    branches:
      # тригерить action когда мы делать git push из ветки master
      - "master"
      # не тригерить джобы если изменения были только в любых файлах папки [workflows]
    # paths-ignore:
    #   - ".github/workflows/*"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          # в key нам нужно указать динамическое значение, а не захардкоженное, поэтому используем expression ф-цию. Если ключ изменится, то это будет знаком того,
          # что предыдущий кэш не валидный. в нашем случае мы хотим закешить node_modules, соответственно мы хотим хранить node_modules в кэше до того момента, пока не появится
          # новые пакеты. когда они появятся - мы хотим удалить старый кеш и закешировать node_modules заново. Для этого "тригером" к созданию нового кэша мы и выбрали
          # файл package-lock.json, который изменится при установке новых модулей, и сообщит actions/cache@v3 плагину, что нужно перекешировать node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test application
        run: npm run test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint validation
        run: npm run lint
  build:
    runs-on:
      ubuntu-latest
      # по дефолту джобы запускаются одновременно в 3 потока, и не зависят друг от друга. для того, чтобы создать зависимость есть команда needs
    # в needs мы указываем, что джоба lint зависит от джобы test, и явно говорим дождаться успешного выполнения test, а только потом выполнять lint
    needs: [lint, test]
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Deploy
        run: echo Fake deploy...
